{"version":3,"sources":["components/Searchbar/Searchbar.jsx","components/Button/Button.jsx","components/Loader/Loader.jsx","services/pexels-api.js","components/ImageGallery/ImageGallery.jsx","components/ImageGalleryItem/ImageGalleryItem.jsx","components/Modal/Modal.jsx","App.js","index.js"],"names":["Searchbar","onSubmit","useState","query","setQuery","className","e","preventDefault","trim","toast","error","type","autoComplete","autoFocus","placeholder","value","onChange","target","Button","onClick","LoaderComponent","color","height","width","PexelsApi","this","searchQuery","pageNumber","qtyPerPage","endPoint","newSearchQuery","newPage","a","axios","defaults","baseURL","headers","common","Authorization","url","get","response","data","photos","imageArr","console","log","message","pexelsApi","Status","ImageGallery","status","setStatus","imageArray","setImageArray","showModal","setShowModal","largeImageUrl","setLargeImageUrl","imageAlt","setImageAlt","renderImages","useCallback","fetchImages","then","fetchedImages","length","smoothScrolling","imageClickHandler","alt","toggleModal","window","scrollTo","top","document","documentElement","scrollHeight","behavior","useEffect","page","map","id","src","large","medium","photographer","smallImageUrl","imgDescription","onImageClick","onClose","ImageGalleryItem","modalRoot","querySelector","Modal","activeImageUrl","setActiveImageUrl","activeImageAlt","setActiveImageAlt","closeModal","changeActiveImage","index","keyboardManipulation","activeIndex","findIndex","code","addEventListener","removeEventListener","createPortal","currentTarget","App","setSearchQuery","newQuery","autoClose","position","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.c3f9d262.chunk.js","sourcesContent":["// package import\r\nimport { useState } from 'react';\r\nimport { toast } from 'react-toastify';\r\nimport { PropTypes } from 'prop-types';\r\n\r\n// styles import\r\nimport './Searchbar.css';\r\n\r\nexport function Searchbar({ onSubmit }) {\r\n  const [query, setQuery] = useState('');\r\n\r\n  // DONE function to track changes on input\r\n  const handleInputChange = e => {\r\n    setQuery(e.target.value);\r\n  };\r\n\r\n  // DONE function to submit form\r\n  const handleFormSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    if (query.trim() === '') {\r\n      return toast.error('Please enter the search query!');\r\n    }\r\n\r\n    onSubmit(query);\r\n\r\n    setQuery('');\r\n  };\r\n\r\n  return (\r\n    <header className=\"Searchbar\">\r\n      <form className=\"SearchForm\" onSubmit={handleFormSubmit}>\r\n        <button type=\"submit\" className=\"SearchForm-button\">\r\n          <span className=\"SearchForm-button-label\">Search</span>\r\n        </button>\r\n\r\n        <input\r\n          className=\"SearchForm-input\"\r\n          type=\"text\"\r\n          autoComplete=\"off\"\r\n          autoFocus\r\n          placeholder=\"Search images and photos\"\r\n          value={query}\r\n          onChange={handleInputChange}\r\n        />\r\n      </form>\r\n    </header>\r\n  );\r\n}\r\n\r\nSearchbar.propTypes = {\r\n  onSubmit: PropTypes.func.isRequired,\r\n};\r\n","import PropTypes from 'prop-types';\r\n\r\nimport './Button.css';\r\n\r\nexport function Button({ onClick }) {\r\n  return (\r\n    <button className=\"Button\" type=\"button\" onClick={onClick}>\r\n      Load More\r\n    </button>\r\n  );\r\n}\r\n\r\nButton.propTypes = {\r\n  onClick: PropTypes.func.isRequired,\r\n};\r\n","import Loader from 'react-loader-spinner';\r\n\r\nimport 'react-loader-spinner/dist/loader/css/react-spinner-loader.css';\r\nimport './Loader.css';\r\n\r\nexport function LoaderComponent() {\r\n  return (\r\n    <div className=\"loaderWrap\">\r\n      <Loader type=\"Bars\" color=\"#00BFFF\" height={175} width={175} />\r\n    </div>\r\n  );\r\n}\r\n","import axios from 'axios';\r\n\r\nexport class PexelsApi {\r\n  #BASE_URL = 'https://api.pexels.com/v1/';\r\n  #API_KEY = '563492ad6f9170000100000142740a29c00e426eb1ebfda344bd325b';\r\n\r\n  constructor() {\r\n    this.searchQuery = '';\r\n    this.pageNumber = 1;\r\n    this.qtyPerPage = 12;\r\n    this.endPoint = 'search';\r\n  }\r\n\r\n  // searchQuery getter\r\n  get query() {\r\n    return this.searchQuery;\r\n  }\r\n\r\n  // searchQuery setter\r\n  set query(newSearchQuery) {\r\n    this.searchQuery = newSearchQuery;\r\n  }\r\n\r\n  get page() {\r\n    return this.pageNumber;\r\n  }\r\n\r\n  set page(newPage) {\r\n    this.pageNumber = newPage;\r\n  }\r\n\r\n  async fetchImages() {\r\n    axios.defaults.baseURL = this.#BASE_URL;\r\n    axios.defaults.headers.common.Authorization = this.#API_KEY;\r\n\r\n    const url = `${this.endPoint}?query=${this.searchQuery}&page=${this.pageNumber}&orientation=landscape&per_page=${this.qtyPerPage}`;\r\n\r\n    try {\r\n      const response = await axios.get(url);\r\n      const imageArr = await response.data.photos;\r\n      return imageArr;\r\n    } catch (error) {\r\n      console.log(\"Something's wrong\", error.message);\r\n    }\r\n  }\r\n}\r\n","import { useState, useEffect, useCallback } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { toast } from 'react-toastify';\r\n\r\nimport './ImageGallery.css';\r\n\r\nimport { Button } from '..';\r\nimport { LoaderComponent } from '..';\r\nimport { ImageGalleryItem } from '..';\r\nimport { Modal } from '..';\r\n\r\n// import { PixabayApi } from '../../services';\r\nimport { PexelsApi } from '../../services';\r\n\r\n// const pixabayApi = new PixabayApi();\r\nconst pexelsApi = new PexelsApi();\r\n\r\n// state machine\r\nconst Status = {\r\n  IDLE: 'idle',\r\n  PENDING: 'pending',\r\n  RESOLVED: 'resolved',\r\n  REJECTED: 'rejected',\r\n};\r\n\r\nexport function ImageGallery({ searchQuery }) {\r\n  const [status, setStatus] = useState(Status.IDLE);\r\n  const [imageArray, setImageArray] = useState([]);\r\n  const [showModal, setShowModal] = useState(false);\r\n  const [largeImageUrl, setLargeImageUrl] = useState('');\r\n  const [imageAlt, setImageAlt] = useState('');\r\n\r\n  // pexels\r\n  const renderImages = useCallback(() => {\r\n    try {\r\n      pexelsApi.fetchImages().then(fetchedImages => {\r\n        // alert on empty arrays\r\n        if (fetchedImages.length === 0) {\r\n          toast.error('Nothing found! Please enter the correct query!');\r\n          return;\r\n        }\r\n        setImageArray(imageArray => [...imageArray, ...fetchedImages]);\r\n\r\n        // smooth scrolling\r\n        smoothScrolling();\r\n      });\r\n    } catch (error) {\r\n      console.log(\r\n        \"Okay, Houston, we've got a problem in fetchImages: \",\r\n        error.message,\r\n      );\r\n    }\r\n  }, []);\r\n\r\n  // XXX Pixabay - currently not available\r\n  // const renderImages = useCallback(() => {\r\n  //   try {\r\n  //     pixabayApi.fetchImages().then(fetchedImages => {\r\n  //       // alert on empty arrays\r\n  //       if (fetchedImages?.hits?.length === 0) {\r\n  //         toast.error('Nothing found! Please enter the correct query!');\r\n  //         return;\r\n  //       }\r\n\r\n  //       setImageArray(imageArray => [...imageArray, ...fetchedImages?.hits]);\r\n  //       // smooth scrolling\r\n  //       smoothScrolling();\r\n  //     });\r\n  //   } catch (error) {\r\n  //     console.log(\r\n  //       \"Okay, Houston, we've got a problem in fetchImages: \",\r\n  //       error.message,\r\n  //     );\r\n  //   }\r\n  // }, []);\r\n\r\n  // function to handle clicks on image\r\n  const imageClickHandler = (url, alt) => {\r\n    setLargeImageUrl(url);\r\n    setImageAlt(alt);\r\n\r\n    toggleModal();\r\n  };\r\n\r\n  // function to toggle modal\r\n  const toggleModal = () => {\r\n    setShowModal(showModal => !showModal);\r\n  };\r\n\r\n  // function to handle clicks on load more\r\n  const loadMoreBtnClickHandler = () => {\r\n    try {\r\n      pexelsApi.page += 1;\r\n      renderImages();\r\n    } catch (error) {\r\n      setStatus(Status.REJECTED);\r\n      console.log(\"Okay, Houston, we've got a problem here:\", error.message);\r\n    }\r\n  };\r\n\r\n  // smooth scrolling to the downloaded images\r\n  const smoothScrolling = () => {\r\n    window.scrollTo({\r\n      top: document.documentElement.scrollHeight,\r\n      behavior: 'smooth',\r\n    });\r\n  };\r\n\r\n  // useEffect to track changes on search query\r\n  useEffect(() => {\r\n    if (!searchQuery) {\r\n      return;\r\n    }\r\n\r\n    setStatus(Status.PENDING);\r\n    try {\r\n      setImageArray([]);\r\n      pexelsApi.page = 1;\r\n      pexelsApi.query = searchQuery;\r\n      renderImages();\r\n      setStatus(Status.RESOLVED);\r\n    } catch (error) {\r\n      setStatus(Status.REJECTED);\r\n      console.log(\r\n        \"Okay, Houston, we've got a problem in useEffect\",\r\n        error.message,\r\n      );\r\n    }\r\n  }, [renderImages, searchQuery]);\r\n\r\n  switch (status) {\r\n    case 'idle':\r\n      return null;\r\n    case 'pending':\r\n      return (\r\n        <>\r\n          <LoaderComponent />\r\n        </>\r\n      );\r\n    case 'resolved':\r\n      return (\r\n        <>\r\n          <ul className=\"ImageGallery\">\r\n            {imageArray.map(({ id, src: { large, medium }, photographer }) => {\r\n              return (\r\n                <li key={id} className=\"ImageGalleryItem\">\r\n                  <ImageGalleryItem\r\n                    largeImageUrl={large}\r\n                    smallImageUrl={medium}\r\n                    imgDescription={photographer}\r\n                    onImageClick={imageClickHandler}\r\n                  />\r\n                </li>\r\n              );\r\n            })}\r\n          </ul>\r\n          {showModal && (\r\n            <Modal\r\n              alt={imageAlt}\r\n              url={largeImageUrl}\r\n              onClose={toggleModal}\r\n              imageArray={imageArray}\r\n            />\r\n          )}\r\n          {imageArray.length !== 0 && (\r\n            <div className=\"ButtonWrap\">\r\n              <Button onClick={loadMoreBtnClickHandler} />\r\n            </div>\r\n          )}\r\n        </>\r\n      );\r\n    case 'rejected':\r\n      return null;\r\n    default:\r\n      return;\r\n  }\r\n}\r\n\r\nImageGallery.propTypes = {\r\n  searchQuery: PropTypes.string.isRequired,\r\n};\r\n","import PropTypes from 'prop-types';\r\n\r\nimport './ImageGalleryItem.css';\r\n\r\nexport function ImageGalleryItem({\r\n  smallImageUrl,\r\n  largeImageUrl,\r\n  imgDescription,\r\n  onImageClick,\r\n}) {\r\n  return (\r\n    <img\r\n      src={smallImageUrl}\r\n      alt={imgDescription}\r\n      className=\"ImageGalleryItem-image\"\r\n      onClick={() => {\r\n        onImageClick(largeImageUrl, imgDescription);\r\n      }}\r\n      data-source={largeImageUrl}\r\n    />\r\n  );\r\n}\r\n\r\nImageGalleryItem.propTypes = {\r\n  smallImageUrl: PropTypes.string.isRequired,\r\n  largeImageUrl: PropTypes.string.isRequired,\r\n  imgDescription: PropTypes.string.isRequired,\r\n  onImageClick: PropTypes.func.isRequired,\r\n};\r\n","// package import\r\nimport { useState, useEffect, useCallback } from 'react';\r\nimport { createPortal } from 'react-dom';\r\nimport PropTypes from 'prop-types';\r\n\r\n// styles import\r\nimport './Modal.css';\r\n\r\nconst modalRoot = document.querySelector('#modal-root');\r\n\r\nexport function Modal({ url, alt, onClose, imageArray }) {\r\n  const [activeImageUrl, setActiveImageUrl] = useState(url);\r\n  const [activeImageAlt, setActiveImageAlt] = useState(alt);\r\n  // const [activeIndex, setActiveIndex] = useState(null);\r\n\r\n  const closeModal = useCallback(() => {\r\n    onClose();\r\n  }, [onClose]);\r\n\r\n  // function to handle backdrop clicks\r\n  const handleBackdropClick = e => {\r\n    if (e.currentTarget !== e.target) {\r\n      return;\r\n    }\r\n\r\n    closeModal();\r\n  };\r\n\r\n  // function  to update state on keyboard manipulation\r\n  const changeActiveImage = useCallback(\r\n    index => {\r\n      setActiveImageAlt(imageArray[index]?.photographer);\r\n      setActiveImageUrl(imageArray[index]?.src?.large);\r\n    },\r\n    [imageArray],\r\n  );\r\n\r\n  // function to close modal on ESC & to switch between images\r\n  const keyboardManipulation = useCallback(\r\n    e => {\r\n      let activeIndex = imageArray.findIndex(\r\n        ({ src: { large } }) => large === activeImageUrl,\r\n      );\r\n\r\n      switch (e.code) {\r\n        case 'Escape':\r\n          closeModal();\r\n          return;\r\n        case activeIndex === imageArray.length - 1 && 'ArrowRight':\r\n          activeIndex = 0;\r\n          changeActiveImage(activeIndex);\r\n          return;\r\n        case activeIndex < imageArray.length - 1 && 'ArrowRight':\r\n          activeIndex += 1;\r\n          changeActiveImage(activeIndex);\r\n          return;\r\n        case activeIndex === 0 && 'ArrowLeft':\r\n          activeIndex = imageArray.length - 1;\r\n          changeActiveImage(activeIndex);\r\n          return;\r\n        case activeIndex > 0 && 'ArrowLeft':\r\n          activeIndex -= 1;\r\n          changeActiveImage(activeIndex);\r\n          return;\r\n        default:\r\n          return;\r\n      }\r\n    },\r\n    [activeImageUrl, changeActiveImage, imageArray, closeModal],\r\n  );\r\n\r\n  // adding keydown listener\r\n  useEffect(() => {\r\n    window.addEventListener('keydown', keyboardManipulation);\r\n\r\n    return () => {\r\n      window.removeEventListener('keydown', keyboardManipulation);\r\n    };\r\n  }, [keyboardManipulation]);\r\n\r\n  return createPortal(\r\n    <div className=\"Overlay\" onClick={handleBackdropClick}>\r\n      <div className=\"Modal\">\r\n        <img src={activeImageUrl} alt={activeImageAlt} />\r\n      </div>\r\n    </div>,\r\n    modalRoot,\r\n  );\r\n}\r\n\r\nModal.propTypes = {\r\n  alt: PropTypes.string.isRequired,\r\n  url: PropTypes.string.isRequired,\r\n  onClose: PropTypes.func.isRequired,\r\n  imageArray: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      photographer: PropTypes.string.isRequired,\r\n      src: PropTypes.shape({\r\n        large: PropTypes.string.isRequired,\r\n      }),\r\n    }),\r\n  ),\r\n};\r\n","// package import\r\nimport { useState } from 'react';\r\nimport { ToastContainer } from 'react-toastify';\r\n\r\n// styles import\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\n// component import\r\nimport { Searchbar } from './components';\r\nimport { ImageGallery } from './components';\r\n\r\nfunction App() {\r\n  const [searchQuery, setSearchQuery] = useState('');\r\n\r\n  // TODO function to update state on form submit\r\n  const formSubmitHandler = newQuery => {\r\n    setSearchQuery(newQuery);\r\n  };\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <Searchbar onSubmit={formSubmitHandler} />\r\n      <ImageGallery searchQuery={searchQuery} />\r\n      <ToastContainer autoClose={2000} position=\"top-right\" />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n"],"sourceRoot":""}