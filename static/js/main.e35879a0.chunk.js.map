{"version":3,"sources":["components/Searchbar/Searchbar.jsx","services/PixabayApi/PixabayApi.js","components/ImageGallery/ImageGallery.jsx","components/ImageGalleryItem/ImageGalleryItem.jsx","components/Loader/Loader.jsx","components/LoadMoreButton/LoadMoreButton.jsx","App.js","index.js"],"names":["Searchbar","onSubmit","useState","query","setQuery","className","e","preventDefault","trim","toast","error","type","autoComplete","autoFocus","placeholder","value","onChange","target","page","a","fetchUrl","axios","get","imgArr","data","console","log","message","Status","ImageGallery","status","setStatus","setPage","imgArray","setImgArray","prevQuery","ref","useRef","useEffect","current","usePrevious","PixabayApi","then","images","hits","LoaderComponent","map","id","webformatURL","largeImageURL","tags","smallImageUrl","imgDescription","length","onClick","ImageGalleryItem","src","alt","color","height","width","LoadMoreButton","App","searchQuery","setSearchQuery","newQuery","autoClose","position","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e35879a0.chunk.js","sourcesContent":["// import packages\r\nimport { useState } from 'react';\r\nimport { toast } from 'react-toastify';\r\nimport { PropTypes } from 'prop-types';\r\n\r\n// import styles\r\nimport './Searchbar.css';\r\n\r\nexport function Searchbar({ onSubmit }) {\r\n  const [query, setQuery] = useState('');\r\n\r\n  // DONE function to track changes on input\r\n  const handleInputChange = e => {\r\n    setQuery(e.target.value);\r\n  };\r\n\r\n  // DONE function to submit form\r\n  const handleFormSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    if (query.trim() === '') {\r\n      return toast.error('Please enter the search query!');\r\n    }\r\n\r\n    onSubmit(query);\r\n\r\n    setQuery('');\r\n  };\r\n\r\n  return (\r\n    <header className=\"Searchbar\">\r\n      <form className=\"SearchForm\" onSubmit={handleFormSubmit}>\r\n        <button type=\"submit\" className=\"SearchForm-button\">\r\n          <span className=\"SearchForm-button-label\">Search</span>\r\n        </button>\r\n\r\n        <input\r\n          className=\"SearchForm-input\"\r\n          type=\"text\"\r\n          autoComplete=\"off\"\r\n          autoFocus\r\n          placeholder=\"Search images and photos\"\r\n          value={query}\r\n          onChange={handleInputChange}\r\n        />\r\n      </form>\r\n    </header>\r\n  );\r\n}\r\n\r\nSearchbar.propTypes = {\r\n  onSubmit: PropTypes.func.isRequired,\r\n};\r\n","// import packages\nimport axios from 'axios';\n\nexport async function PixabayApi(query, page) {\n  const BASE_URL = 'https://pixabay.com/api/?';\n  const API_KEY = '23203162-5bd4fce9443c3feba1bdcfdd5';\n  const fetchUrl = `${BASE_URL}q=${query}&page=${page}&key=${API_KEY}&image_type=photo&orientation=horizontal&per_page=12`;\n\n  try {\n    const imgArr = await axios.get(fetchUrl);\n    return imgArr?.data;\n  } catch (error) {\n    console.log(\n      \"Okay, Houston, we've got a problem with PixabayApi func: \",\n      error.message,\n    );\n  }\n}\n","// import packages\r\nimport { useState, useEffect, useRef } from 'react';\r\nimport { PropTypes } from 'prop-types';\r\nimport { toast } from 'react-toastify';\r\n\r\n// import styles\r\nimport './ImageGallery.css';\r\n\r\n// import components\r\n\r\n// TODO Modal\r\nimport { LoadMoreButton } from '..';\r\nimport { LoaderComponent } from '..';\r\nimport { ImageGalleryItem } from '..';\r\nimport { PixabayApi } from '../../services';\r\nimport { resolveConfigFile } from 'prettier';\r\n\r\n// state machine\r\nconst Status = {\r\n  IDLE: 'idle',\r\n  PENDING: 'pending',\r\n  RESOLVED: 'resolved',\r\n  REJECTED: 'rejected',\r\n};\r\n\r\nexport function ImageGallery({ query }) {\r\n  const [status, setStatus] = useState(Status.IDLE);\r\n  const [page, setPage] = useState(1);\r\n  const [imgArray, setImgArray] = useState([]);\r\n  const [showModal, setShowModal] = useState(false);\r\n  const [largeImageUrl, setLargeImageUrl] = useState('');\r\n  const [imageAlt, setImageAlt] = useState('');\r\n\r\n  // TODO useEffect to fetch images on query / page change\r\n  const prevQuery = usePrevious(query);\r\n\r\n  useEffect(() => {\r\n    console.log('обновился');\r\n\r\n    console.log(page);\r\n    if (!query) {\r\n      return;\r\n    }\r\n\r\n    if (prevQuery !== query) {\r\n      console.log('запрос отличается');\r\n      setImgArray([]);\r\n      setPage(1);\r\n    }\r\n\r\n    try {\r\n      setStatus(Status.PENDING);\r\n      PixabayApi(query, page).then(images => {\r\n        console.log(images.hits);\r\n        setImgArray(imgArray => [...imgArray, ...images?.hits]);\r\n        setStatus(Status.RESOLVED);\r\n      });\r\n    } catch (error) {\r\n      console.log(\r\n        \"Okay, Houston, we've got a problem with UseEffect: \",\r\n        error.message,\r\n      );\r\n      setStatus(Status.REJECTED);\r\n    }\r\n  }, [query, page]);\r\n\r\n  // TODO function to render images\r\n\r\n  // TODO function to update active index by click on image\r\n\r\n  // TODO function to toggle modal\r\n\r\n  // TODO function to fetch more images by click on load more button\r\n  const onLoadMoreBtnClickHandler = () => {\r\n    console.log('click');\r\n    setPage(page => page + 1);\r\n  };\r\n\r\n  switch (status) {\r\n    case 'idle':\r\n      return null;\r\n    case 'pending':\r\n      return <LoaderComponent />;\r\n    case 'resolved':\r\n      return (\r\n        <>\r\n          <ul className=\"ImageGallery\">\r\n            {imgArray.map(({ id, largeImageURL, webformatURL, tags }) => {\r\n              return (\r\n                <li key={id} className=\"ImageGalleryItem\">\r\n                  <ImageGalleryItem\r\n                    smallImageUrl={webformatURL}\r\n                    imgDescription={tags}\r\n                  />\r\n                </li>\r\n              );\r\n            })}\r\n          </ul>\r\n          {imgArray.length !== 0 && (\r\n            <div className=\"LoadMoreButtonWrap\">\r\n              <LoadMoreButton onClick={onLoadMoreBtnClickHandler} />\r\n            </div>\r\n          )}\r\n        </>\r\n      );\r\n    case 'rejected':\r\n      return null;\r\n    default:\r\n      return;\r\n  }\r\n}\r\n\r\nfunction usePrevious(value) {\r\n  const ref = useRef();\r\n\r\n  useEffect(() => {\r\n    ref.current = value;\r\n  }, [value]);\r\n\r\n  return ref.current;\r\n}\r\n","// import packages\r\nimport PropTypes from 'prop-types';\r\n\r\n// import styles\r\nimport './ImageGalleryItem.css';\r\n\r\nexport function ImageGalleryItem({ smallImageUrl, imgDescription }) {\r\n  return (\r\n    <img\r\n      src={smallImageUrl}\r\n      alt={imgDescription}\r\n      className=\"ImageGalleryItem-image\"\r\n      // onClick={() => {\r\n      //   onImageClick(largeImageUrl, imgDescription);\r\n      // }}\r\n      // data-source={largeImageUrl}\r\n    />\r\n  );\r\n}\r\n\r\nImageGalleryItem.propTypes = {\r\n  smallImageUrl: PropTypes.string.isRequired,\r\n  imgDescription: PropTypes.string.isRequired,\r\n};\r\n","import Loader from 'react-loader-spinner';\r\nimport 'react-loader-spinner/dist/loader/css/react-spinner-loader.css';\r\nimport './Loader.css';\r\n\r\nexport function LoaderComponent() {\r\n  return (\r\n    <div className=\"LoaderWrap\">\r\n      <Loader type=\"Bars\" color=\"#00BFFF\" height={175} width={175} />\r\n    </div>\r\n  );\r\n}\r\n","// import packages\r\nimport PropTypes from 'prop-types';\r\n\r\n// import styles\r\nimport './LoadMoreButton.css';\r\n\r\nexport function LoadMoreButton({ onClick }) {\r\n  return (\r\n    <button className=\"Button\" type=\"button\" onClick={onClick}>\r\n      Load More\r\n    </button>\r\n  );\r\n}\r\n\r\nLoadMoreButton.propTypes = {\r\n  onClick: PropTypes.func.isRequired,\r\n};\r\n","// import  packages\nimport { useState } from 'react';\nimport { ToastContainer } from 'react-toastify';\n\n// import styles\nimport 'react-toastify/dist/ReactToastify.css';\n\n// import components\nimport { Searchbar } from './components';\nimport { ImageGallery } from './components/ImageGallery/ImageGallery';\n\nfunction App() {\n  const [searchQuery, setSearchQuery] = useState('');\n\n  // DONE function to update state on form submit\n  const formSubmitHandler = newQuery => {\n    setSearchQuery(newQuery);\n  };\n\n  return (\n    <div className=\"App\">\n      <Searchbar onSubmit={formSubmitHandler} />\n      <ToastContainer autoClose={2000} position=\"top-right\" />\n      <ImageGallery query={searchQuery} />\n    </div>\n  );\n}\n\nexport default App;\n\n// TODO send search query as prop to Image Gallery\n// TODO create api as hook\n// TODO refactor all functions to hooks\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n"],"sourceRoot":""}